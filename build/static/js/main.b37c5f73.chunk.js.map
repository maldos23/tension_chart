{"version":3,"sources":["components/charts/index.js","components/TreeMenu/index.js","components/visuals/Tabsmenu/index.js","components/data/index.js","components/sidebar/index.js","components/settings/index.js","App.js","serviceWorker.js","index.js"],"names":["am4core","am4themes_animated","Chart","props","state","scale","data","chart","am4charts","index","x","y","xAxes","push","renderer","grid","template","location","title","text","cursorTooltipEnabled","tooltip","disabled","labels","fill","adapter","add","value","target","yAxes","field","name","series","dataFields","valueY","valueX","categoryX","tooltipText","stroke","strokeWidth","ev","each","item","hex","getFillFromObject","background","label","bullet","bullets","circle","createSeries","legend","cursor","maxTooltipDistance","exporting","menu","this","dispose","id","style","width","height","Component","useTreeItemStyles","makeStyles","theme","root","color","palette","secondary","backgroundColor","grey","content","borderTopRightRadius","spacing","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","marginLeft","paddingLeft","expanded","labelRoot","display","alignItems","padding","labelIcon","marginRight","labelText","flexGrow","StyledTreeItem","classes","LabelIcon","labelInfo","bgColor","other","TreeItem","className","Typography","variant","useStyles","maxWidth","GmailTreeView","TreeView","defaultCollapseIcon","ArrowDropDown","defaultExpandIcon","ArrowRight","defaultEndIcon","onClick","handleValue","nodeId","BarChartRounded","AccountTreeRounded","HistoryRounded","PolymerRounded","SettingsRounded","useStyle","margin","Main_Component","useState","selection","setSelection","getValue","items","useEffect","borderTopLeftRadius","borderBottomLeftRadius","Tabs","Array","isArray","map","Tab","key","valueTabs","console","log","Grid","container","xs","List","ListSubheader","ListItem","button","ListItemText","primary","fabButton","paper","boxShadow","border","open","setOpen","IconButton","MenuRounded","SwipeableDrawer","onOpen","onClose","CardContent","Fab","handleNewchart","AddRounded","handleSelection","ListItemIcon","Divider","textAlign","Button","startIcon","SupervisorAccountRounded","valueTab","md","CardActions","marign","layerGrid","top","card","textfield","CreateCharts","dataSeries","dataChart","App","setDataSeries","dialog","setDialog","useTheme","fullscreen","useMediaQuery","breakpoints","down","AppBar","WebkitBackgroundClip","WebkitTextFillColor","Toolbar","Hidden","smUp","openDialog","selectionvalue","Tooltip","href","GitHub","Card","sm","lg","xsDown","Fade","in","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","TextField","fullWidth","autoFocus","required","select","MenuItem","Switch","DialogActions","Boolean","window","hostname","match","createMuiTheme","fontFamily","join","main","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b37c5f73.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nclass Chart extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            scale:0,\r\n            data:[]\r\n        }  \r\n    }\r\n\r\n    componentDidMount() {\r\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n        \r\n        // Add data\r\n        chart.data = [\r\n            {index:1, x:0.001,y:200},\r\n            {index:2, x:0.023,y:400},\r\n            {index:3, x:0.19,y:600},\r\n            {index:4, x:0.29,y:800}\r\n            ];\r\n        \r\n        // Creo ejes\r\n        var xAxes = chart.xAxes.push(new am4charts.ValueAxis());\r\n        xAxes.renderer.grid.template.location = 0;\r\n        //xAxes.renderer.minGridDistance = 50;\r\n        xAxes.title.text=\"Deformacion\";\r\n        xAxes.cursorTooltipEnabled = true;\r\n        xAxes.tooltip.disabled=true;\r\n        xAxes.renderer.labels.template.fill=am4core.color(\"#EE0979\");\r\n        xAxes.adapter.add(\"dataContextValue\",(value,target) => {\r\n            return value\r\n        })\r\n\r\n        var yAxes = chart.yAxes.push(new am4charts.ValueAxis());\r\n        yAxes.title.text=\"Carga\";\r\n        // Create series\r\n        function createSeries(field, name) {\r\n            var series = chart.series.push(new am4charts.LineSeries());\r\n            series.dataFields.valueY = field;\r\n            series.dataFields.valueX = \"x\";\r\n            series.dataFields.categoryX= \"index\";\r\n            series.name = name;\r\n            series.tooltipText = \"{valueY.value}\";\r\n            series.fill = am4core.color(\"#EE0979\");\r\n            series.stroke = am4core.color(\"#EE0979\");\r\n            series.strokeWidth = 2;\r\n            // Set up tooltip\r\n            chart.adapter.add(\"tooltipText\", function(ev) {\r\n            var text = \"[bold]{valueY}[/]\\n\";\r\n            chart.series.each(function(item) {\r\n                text += \"[\" + item.stroke.hex + \"]●[/] \" + item.name + \": {\" + item.dataFields.valueY + \"}\\n\";\r\n            });\r\n            return text;\r\n            });\r\n            \r\n            series.tooltip.getFillFromObject = true;\r\n            series.tooltip.background.fill = am4core.color(\"#fff\");\r\n            series.tooltip.label.fill = am4core.color(\"#00\");\r\n            \r\n            var bullet = series.bullets.push(new am4charts.CircleBullet());\r\n            bullet.circle.stroke = am4core.color(\"#fff\");\r\n            bullet.circle.strokeWidth = 2;\r\n            \r\n            return series;\r\n        }\r\n        \r\n        createSeries(\"y\", \"Carga - Deformacion\");\r\n        \r\n        chart.legend = new am4charts.Legend();\r\n        chart.cursor = new am4charts.XYCursor();\r\n        chart.cursor.maxTooltipDistance = 0;\r\n        chart.exporting.menu = new am4core.ExportMenu();\r\n        this.chart = chart;\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n          this.chart.dispose();\r\n        }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"480px\" }}></div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport { TreeItem, TreeView } from '@material-ui/lab';\r\nimport { Label, Mail, Delete, SupervisorAccount, Info, Forum, LocalOffer, ArrowDropDown, ArrowRight, SettingsRounded, BarChartRounded, AccountTreeRounded, HistoryRounded, PolymerRounded } from '@material-ui/icons';\r\n\r\nconst useTreeItemStyles = makeStyles(theme => ({\r\n    root: {\r\n      color: theme.palette.text.secondary,\r\n      '&:focus > $content': {\r\n        backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n        color: 'var(--tree-view-color)',\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.secondary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      '$expanded > &': {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      '& $content': {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    label: {\r\n      fontWeight: 'inherit',\r\n      color: 'inherit',\r\n    },\r\n    labelRoot: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0.5, 0),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: 'inherit',\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n  \r\n  function StyledTreeItem(props) {\r\n    const classes = useTreeItemStyles();\r\n    const { labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, ...other } = props;\r\n  \r\n    return (\r\n      <TreeItem\r\n        label={\r\n          <div className={classes.labelRoot}>\r\n            <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n            <Typography variant=\"body2\" className={classes.labelText}>\r\n              {labelText}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"inherit\">\r\n              {labelInfo}\r\n            </Typography>\r\n          </div>\r\n        }\r\n        style={{\r\n          '--tree-view-color': color,\r\n          '--tree-view-bg-color': bgColor,\r\n        }}\r\n        classes={{\r\n          root: classes.root,\r\n          content: classes.content,\r\n          expanded: classes.expanded,\r\n          group: classes.group,\r\n          label: classes.label,\r\n        }}\r\n        {...other}\r\n      />\r\n    );\r\n  }\r\n  \r\n  StyledTreeItem.propTypes = {\r\n    bgColor: PropTypes.string,\r\n    color: PropTypes.string,\r\n    labelIcon: PropTypes.elementType.isRequired,\r\n    labelInfo: PropTypes.string,\r\n    labelText: PropTypes.string.isRequired,\r\n    nodeId: PropTypes.string.isRequired\r\n  };\r\n  \r\n  const useStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: \"calc(100% - 20px)\",\r\n    },\r\n  });\r\n  \r\n  export default function GmailTreeView(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ArrowDropDown />}\r\n        defaultExpandIcon={<ArrowRight />}\r\n        defaultEndIcon={<div style={{ width: 24 }} />}\r\n        >\r\n        <StyledTreeItem \r\n        onClick={()=>props.handleValue(0)} \r\n        nodeId=\"1\" \r\n        labelText=\"Grafica\" \r\n        labelIcon={BarChartRounded}/>\r\n        <StyledTreeItem \r\n        onClick={()=>props.handleValue(1)} \r\n        nodeId=\"2\" \r\n        labelText=\"Datos\" \r\n        labelIcon={AccountTreeRounded} \r\n        labelInfo=\"120\"/>\r\n        <StyledTreeItem \r\n        onClick={()=>props.handleValue(2)} \r\n        nodeId=\"3\" \r\n        labelText=\"Historial\" \r\n        labelIcon={HistoryRounded} \r\n        labelInfo=\"3\"/>\r\n        <StyledTreeItem \r\n        onClick={()=>props.handleValue(3)} \r\n        nodeId=\"4\" \r\n        labelText=\"Materiales\" \r\n        labelIcon={PolymerRounded} />\r\n        <StyledTreeItem \r\n        onClick={()=>props.handleValue(4)} \r\n        nodeId=\"5\" \r\n        labelText=\"Configuracion\" \r\n        labelIcon={SettingsRounded} />\r\n    </TreeView>\r\n    );\r\n}","import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tabs, Tab, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    margin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n//Tabs y menu de interface\r\nfunction Main_Component(props){\r\n    const classes = useStyle();\r\n    const [selection,setSelection] = useState(0);\r\n    const { title, getValue, items } = props;\r\n    const GetValue = (vale) => getValue(vale);\r\n    useEffect(() => {\r\n        GetValue(selection);\r\n    },[selection]);\r\n\r\n    return(\r\n        <Fragment>\r\n            <div style={{display:\"flex\"}}>\r\n            <div style={{\r\n                borderTopLeftRadius:\"30px\",\r\n                borderBottomLeftRadius:\"30px\",\r\n                background:\"linear-gradient(to right, #ee0979, #ff6a00)\", \r\n                color:\"#FFF\"\r\n                }}>\r\n                <Typography className={classes.margin} variant=\"h6\">\r\n                {title}\r\n                </Typography>\r\n            </div>\r\n            <Tabs\r\n            value={selection}>\r\n            {Array.isArray(items) === true &&\r\n\r\n                items.map((item, index) => {\r\n                    \r\n                    return(\r\n                    <Tab\r\n                    key={index} \r\n                    onClick={() => setSelection(index)}\r\n                    label={\r\n                        typeof item.label === \"string\"?\r\n                        item.label:\"Sin Definir\"\r\n                    }\r\n                    value={index}/>\r\n                    );\r\n                })\r\n            }\r\n            </Tabs>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nMain_Component.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Main_Component;","import React, { Fragment } from 'react';\r\nimport { Grid, Typography, makeStyles, Toolbar, ExpansionPanel, ExpansionPanelSummary, TextField, ListItem, List, ListItemText, ListSubheader, Divider, Tabs, Tab } from '@material-ui/core';\r\nimport TabsGradient from '../visuals/Tabsmenu/index';\r\n\r\n//Creo estilos de menu\r\nconst useStyle = makeStyles(theme => ({\r\n    margin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function Main_Component(props){\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <Fragment>\r\n            <TabsGradient\r\n            title=\"Datos\"\r\n            items={[\r\n                {label:\"Series\"},\r\n                {label:\"Historial\"},\r\n            ]}\r\n            getValue={(valueTabs) => console.log(valueTabs)}\r\n            />\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}>\r\n                    <List>\r\n                        <ListSubheader>\r\n                            Series en uso\r\n                        </ListSubheader>\r\n                        <ListItem button>\r\n                            <ListItemText\r\n                            primary=\"serie1\"\r\n                            secondary=\"Acero A-36\"/>\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText\r\n                            primary=\"serie1\"\r\n                            secondary=\"Acero A-36\"/>\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText\r\n                            primary=\"serie1\"\r\n                            secondary=\"Acero A-36\"/>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { IconButton, SwipeableDrawer, List, ListItem, ListItemText, CardContent, Fab, makeStyles, ListItemIcon, Typography, Button, Divider } from '@material-ui/core';\r\nimport { MenuRounded, AddRounded, BarChartRounded, SettingsRounded, PolymerRounded, HistoryRounded, AccountTreeRounded, SupervisorAccountRounded } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    fabButton:{\r\n        background: theme.palette.background.paper,\r\n        boxShadow:\"none\",\r\n        border: \"1px solid #ddd\"\r\n    },\r\n}));\r\n\r\nexport default function Main_Component(props){\r\n    const classes = useStyle();\r\n    const [ open, setOpen ] = useState(false);\r\n\r\n    return(\r\n        <Fragment>\r\n            <IconButton \r\n            onClick={() => setOpen(true)}>\r\n                <MenuRounded style={{\r\n                    color:\"#ee0979\",\r\n                    height:35,\r\n                    width:35\r\n                }}/>\r\n            </IconButton>\r\n            <SwipeableDrawer\r\n            open={open}\r\n            onOpen={() => setOpen(true)}\r\n            onClose={() => setOpen(false)}>\r\n                <div style={{width:\"220px\"}}>\r\n                <CardContent>\r\n                <Fab \r\n                onClick={()=> props.handleNewchart(true)}\r\n                className={classes.fabButton} variant=\"extended\">\r\n                  <AddRounded style={{color:\"#ee0979\",height:40,width:40}}/>\r\n                  Nueva Grafica\r\n                </Fab>\r\n                </CardContent>\r\n                <List>\r\n                    <ListItem\r\n                    button \r\n                    onClick={() => {\r\n                        props.handleSelection(0);\r\n                        setOpen(false);\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <BarChartRounded/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        secondary=\"Grafica\"/>\r\n                    </ListItem>\r\n                    <ListItem \r\n                    button \r\n                    onClick={() => {\r\n                        props.handleSelection(1);\r\n                        setOpen(false);\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <AccountTreeRounded/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        secondary=\"Datos\"/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                    button \r\n                    onClick={() => {\r\n                        props.handleSelection(2);\r\n                        setOpen(false);\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <HistoryRounded/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        secondary=\"Historial\"/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                    button \r\n                    onClick={() => {\r\n                        props.handleSelection(3);\r\n                        setOpen(false);\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <PolymerRounded/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        secondary=\"Materiales\"/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                    button \r\n                    onClick={() => {\r\n                        props.handleSelection(4);\r\n                        setOpen(false);\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <SettingsRounded/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        secondary=\"Configuracion\"/>\r\n                    </ListItem>\r\n                </List>\r\n                <Divider/>\r\n                <CardContent style={{textAlign:\"center\"}}>\r\n                <Typography variant=\"caption\">\r\n                  Si deseas guardar datos inicia sesion\r\n                </Typography>\r\n                <br/>\r\n                <br/>\r\n                <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                startIcon={<SupervisorAccountRounded/>}>\r\n                  Iniciar sesion\r\n                </Button>\r\n                <br/>\r\n                <br/>\r\n                <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                startIcon={<SupervisorAccountRounded/>}>\r\n                  Registrarse\r\n                </Button>\r\n                </CardContent>\r\n                </div>\r\n            </SwipeableDrawer>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMain_Component.propTypes = {\r\n    handleSelection: PropTypes.func.isRequired\r\n};","import React, { Fragment, useState } from 'react';\r\nimport { Grid, Typography, makeStyles, Toolbar, CardActions, Button, CardContent, Tabs, Tab } from '@material-ui/core';\r\nimport TabsGradient from '../visuals/Tabsmenu/index';\r\n\r\n//Creo estilos de menu\r\nconst useStyle = makeStyles(theme => ({\r\n    margin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function Main_Component(props){\r\n    const [selection, setSelection] = useState(0);\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <Fragment>\r\n            <TabsGradient\r\n            getValue={(valueTab) => setSelection(valueTab)}\r\n            title=\"configuracion\"\r\n            items={[\r\n                {label:\"Graficos\"},\r\n                {label:\"Datos\"},\r\n                {label:\"Acerca de\"},\r\n            ]}\r\n            />\r\n            <CardContent>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={3}>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button>\r\n                    Aplicar\r\n                </Button>\r\n            </CardActions>\r\n        </Fragment>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { AppBar, Toolbar, IconButton, Avatar, Tabs, Tab, Typography, CardContent, Card, makeStyles, Grid, Divider, TextField, Button, CardHeader, CardActions, Tooltip, Fab, Link, Hidden, Dialog, useTheme, useMediaQuery, DialogTitle, DialogContentText, DialogContent, DialogActions, MenuItem, Switch, FormControlLabel, Fade } from '@material-ui/core';\nimport { MenuOpenRounded, GitHub, TimelineRounded, SettingsApplicationsRounded, MoreRounded, AddRounded, Instagram, SupervisorAccount, SupervisorAccountRounded} from '@material-ui/icons';\n//Importo los componentes requeridos para modificar los componentes\nimport Charts from './components/charts/index';\nimport TreeMenu from './components/TreeMenu/index';\nimport Datamenu from './components/data/index';\nimport SidebarMenu from './components/sidebar/index';\nimport SettingsChart from './components/settings/index';\nimport TabsGradient from './components/visuals/Tabsmenu/index';\n//Creo estilo de menu para poder utilizar\nconst useStyle = makeStyles(theme => ({\n  marign:{\n    margin: theme.spacing(1)\n  },\n  fabButton:{\n    background: theme.palette.background.paper,\n    boxShadow:\"none\",\n    border: \"1px solid #ddd\"\n  },\n  layerGrid:{\n    top:\"200px\"\n  },\n  card:{\n    height:\"calc(100vh - 90px)\",\n    boxShadow:\"none\",\n    margin:0\n  },\n  textfield:{\n    width:`calc(50% - 20px)`,\n    margin:theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  const [selection, setSelection] = useState(0);\n  const [dataSeries, setDataSeries] = useState([]);\n  const [dialog, setDialog] = useState(false);\n  const classes = useStyle();\n  const theme = useTheme();\n  const fullscreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  useEffect(() => {\n      setDataSeries([\n    {\n        \"x\": 450,\n        \"y\": 362,\n    }, {\n        \"x\": 269,\n        \"y\": 450,\n    }, {\n        \"x\": 700,\n        \"y\": 758,\n    }]);\n  },[]);\n\n  return (\n    <div>\n     <AppBar style={{\n            boxShadow:\"none\",\n            background:\"linear-gradient(to top, #ee0979, #ff6a00)\",\n            WebkitBackgroundClip:\"text\",\n            WebkitTextFillColor:\"transparent\"}}>\n       <Toolbar>\n          <Hidden smUp>\n          <SidebarMenu \n          handleNewchart={(openDialog) => setDialog(openDialog)} \n          handleSelection={(selectionvalue) => setSelection(selectionvalue)}/>\n          </Hidden>\n          <Typography \n          variant=\"h4\"\n          style={{\n            background:\"linear-gradient(to right, #ee0979, #ff6a00)\",\n            WebkitBackgroundClip:\"text\",\n            WebkitTextFillColor:\"transparent\"\n          }}>\n            <b>Tension</b> Charts\n          </Typography>\n          <div style={{flexGrow:1}}/>\n          <Tooltip title=\"Ver codigo\">\n          <IconButton href=\"https://github.com/maldos23/tension_chart\">\n          <GitHub style={{color:\"#ee0979\"}}/>\n          </IconButton>\n          </Tooltip>\n        </Toolbar>\n     </AppBar>\n     <div style={{height:'70px'}}/>\n      <Card className={classes.card}>\n          <Grid container spacing={0}>\n            <Grid item xs={12} sm={3} lg={2}>\n              <Hidden xsDown>\n                <CardContent>\n                <Fab\n                onClick={()=>setDialog(true)}\n                className={classes.fabButton} \n                variant=\"extended\">\n                  <AddRounded style={{color:\"#ee0979\",height:40,width:40}}/>\n                  Nueva Grafica\n                </Fab>\n                </CardContent>\n                <TreeMenu handleValue={(selectionvalue) => setSelection(selectionvalue)}/>\n                <br/>\n                <Divider/>\n                <CardContent style={{textAlign:\"center\"}}>\n                <Typography variant=\"caption\">\n                  Si deseas guardar datos inicia sesion\n                </Typography>\n                <br/>\n                <br/>\n                <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                startIcon={<SupervisorAccountRounded/>}>\n                  Iniciar sesion\n                </Button>\n                <br/>\n                <br/>\n                <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                startIcon={<SupervisorAccountRounded/>}>\n                  Registrarse\n                </Button>\n                </CardContent>\n              </Hidden>\n            </Grid>\n            <Grid item xs={12} sm={9} lg={10}>\n            <div>\n            <Fade \n            in={true}>\n            <div>\n              {selection === 0 && <CreateCharts dataChart={dataSeries}/>}\n              {selection === 1 && <Datamenu/>}\n              {selection === 4 && <SettingsChart />}\n            </div>\n            </Fade>\n            </div>\n            </Grid>\n          </Grid>\n      </Card>\n      <Dialog\n      onClose={() => setDialog(false)}\n      open={dialog}\n      fullScreen={fullscreen}>\n        <DialogTitle\n        style={{\n          background:\"linear-gradient(to right, #ee0979, #ff6a00)\", \n          color:\"#FFF\"\n        }}\n        color=\"primary\">\n          Nueva grafica\n        </DialogTitle>\n        <form>\n        <DialogContent>\n          <DialogContentText>\n            Ingresa las opciones de creacion de grafica\n          </DialogContentText>\n          \n          <TextField\n          fullWidth\n          autoFocus\n          required\n          className={classes.marign} \n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Nombre de grafico\"/>\n          <TextField\n          required\n          className={classes.textfield} \n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Nombre de Seudo-Material\"/>\n          <TextField\n          select\n          required\n          className={classes.textfield}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Tipo de grafico\">\n            <MenuItem>\n              Tiempo Deformacion\n            </MenuItem>\n            <MenuItem>\n              Tiempo Carga\n            </MenuItem>\n          </TextField>\n          <TextField\n          select\n          required\n          className={classes.textfield}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Material\">\n            <MenuItem>\n              Tiempo Deformacion\n            </MenuItem>\n            <MenuItem>\n              Tiempo Carga\n            </MenuItem>\n          </TextField>\n          <Switch>\n            Mutiples ejes\n          </Switch>\n        </DialogContent>\n        <DialogActions>\n          <Button\n          onClick={() => setDialog(false)}\n          color=\"secondary\">\n            Cancelar\n          </Button>\n          <Button\n          variant=\"outlined\"\n          color=\"secondary\">\n            Aplicar\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction CreateCharts(props){\n  const [selection, setSelection] = useState(0);\n  const classes = useStyle();\n\n  return(\n    <div>\n      <TabsGradient\n      title=\"Graficas\"\n      items={[\n          {label:\"Grafica\"},\n          {label:\"Info\"},\n      ]}\n      getValue={(valueTabs) => setSelection(valueTabs)}\n      />\n      <CardContent>\n      {selection === 0 && <Charts dataSeries={props.dataChart}/>}\n      </CardContent>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport 'typeface-muli';\nimport 'typeface-roboto';\n\nconst theme = createMuiTheme({\n    typography:{\n        fontFamily:[\n            \"roboto\",\n            \"muli\"\n        ].join(\",\")\n    },\n    palette:{\n        primary:{\n            main:\"#EE0979\"\n        },\n        secondary:{\n            main:\"#FF6A00\"\n        }\n    }\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <div style={{fontFamily:\"roboto\"}}>\n            <App/>\n        </div>\n    </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}